<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_menu</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>x = floor(room_width * 0.21);
y = floor(room_height * 0.45);
menu[0] = "Start";
menu[1] = "Credits";
menu[2] = "Quit";
DropAlpha = 0;
TextAlpha = 0;
angle = -1;

audio_play_sound(snd_menu_music, 10, true);
selectLag = 12;

space = 45;
mpos = 0;

MotherX     =   0;
MotherY     =   room_height;
MistX       =   room_width;
MistY       =   room_height;
MountainX   =   room_width;
MountainY   =   room_height;
MenuX       =   0;
MenuY       =   room_height/2 - 100;

StartSelect = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>var move = 0;
move += keyboard_check_pressed(vk_down);
move -= keyboard_check_pressed(vk_up);

if (move != 0)
{
    mpos += move;
    if (mpos &lt; 0) mpos = array_length_1d(menu) - 1;
    if (mpos &gt; array_length_1d(menu) -1) mpos = 0;
}

if(MotherX &lt; room_width/2 + 250)
{
    MotherX +=      4;
}else{
if (TextAlpha &lt; 1){
    TextAlpha += .04
}
}

if(MountainX &gt; room_width/2)
{
    MistX -=  3;
    MountainX -=    3;
}

if(MenuX &lt; room_width/2 - 200)
{
    MenuX += 2;
}

if (keyboard_check_pressed(vk_enter)){
    StartSelect = true;
}

if (StartSelect) selectLag--;

if(selectLag &lt;= 0)
{
    switch (mpos)
    {
        case 0:
         {
             audio_stop_all();
             room_goto(TorchTestRoom_rm);
             break;
         }
        case 1: 
        {
             audio_stop_all();
             room_goto(CORDITS_rm);
             break;
         }
        case 2:
        {
             audio_stop_all();
             game_end();
             break;
        }
        default: break;
    }   
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_halign(fa_left);
draw_set_valign(fa_middle);
draw_set_font(fnt_menu);
draw_set_color(c_red);
draw_set_alpha(1);

var m;
for (m =0; m &lt; array_length_1d(menu); m += 1)
{
    draw_text_colour(x + space, y +(m * space),string(menu[m]), c_black, c_black, c_black, c_black, TextAlpha);
}
if(StartSelect)
{
    angle -= 5;
}

draw_sprite_ext(sprite_index, image_index, x + 16, y + mpos * space, 0.3, 0.3, angle, c_white, TextAlpha);

draw_sprite_ext(spr_mother_menu,    0,      MotherX,     MotherY,       0.5,        0.5,        0,        c_white, 1);
draw_sprite_ext(spr_mist_menu,      0,      MistX,       MistY,         0.6,        0.6,        0,        c_white, 1);
draw_sprite_ext(spr_mountain_menu,  0,      MountainX,   MountainY,     0.5,        0.5,        0,        c_white, 1);
draw_sprite_ext(spr_menu_text,      0,      MenuX,       MenuY,         0.5,        0.5,        0,        c_white, 1);

</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
