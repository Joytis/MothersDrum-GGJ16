<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>spr_drum</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-100</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>drumTrigger = 10;
angleLEFT = 0;
angleRIGHT = 0;
playLeftAnimation = false;
playRightAnimation = false;
drumTrigger2 = 10;
drumTrigger3 = 10;
drumTrigger4 = 10;

drumOffsetX = 0;
drumOffsetY = 0;
angleDrum = 0;

turnLeft = false;
goUp = false;
goRight = false;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (keyboard_check_pressed(ord("Z"))){
    playLeftAnimation = true;
}

if (keyboard_check_pressed(ord("X"))){
    playRightAnimation = true;
}

if(playLeftAnimation){
    if(drumTrigger != 0){
        angleLEFT -= 4;
        drumTrigger--;    
    }else{
        if(drumTrigger2 != 0){
        angleLEFT += 4;
        drumTrigger2--;
        }else{
            playLeftAnimation = false;
            drumTrigger = 10;
            drumTrigger2 = 10;
        }  
    }
}

if(playRightAnimation){
    if(drumTrigger3 != 0){
        angleRIGHT += 4;
        drumTrigger3--;    
    }else{
        if(drumTrigger4 != 0){
        angleRIGHT -= 4;
        drumTrigger4--;
        }else{
            playRightAnimation = false;
            drumTrigger4 = 10;
            drumTrigger3 = 10;
        }  
    }
}

if(!turnLeft){
angleDrum = angleDrum + 0.5;
}else{
angleDrum = angleDrum - 0.5;
}

/*if(!goUp){
drumOffsetY -= 2
}else{
drumOffsetY += 2
}

if(!goRight){
drumOffsetX -= 2
}else{
drumOffsetX += 2
}*/

if (angleDrum &gt; 8){
    turnLeft = true;
}else if (angleDrum &lt; -8){
    turnLeft = false;
}

/*if (drumOffsetX &gt; 30){
    goRight = true;
}else if (drumOffsetX &lt; -30){
    goRight = false;
}

if (drumOffsetY &gt; 30){
    goUp = true;
}else if (drumOffsetY &lt; -30){
    goUp = false;
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_font(fnt_hammer);

draw_sprite_ext(spr_drum, 0, x + drumOffsetX, y + drumOffsetY, 1, 1, angleDrum, c_white, 1);

draw_sprite_ext(spr_mallet, 0, x - 200, y - 200, 0.3, 0.3, angleLEFT, c_white, 1);
draw_text_colour(x - 300, y - 100,"Z", c_black, c_black, c_black, c_black, 0.8);

draw_sprite_ext(spr_mallet, 0, x + 200, y - 200, -0.3, 0.3, angleRIGHT, c_white, 1);
draw_text_colour(x + 300, y - 100,"X", c_black, c_black, c_black, c_black, 0.8);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
